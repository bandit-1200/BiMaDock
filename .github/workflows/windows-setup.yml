name: Windows Setup

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Install Inno Setup
        run: choco install innosetup --yes

      - name: Install GitVersion
        run: dotnet tool install --global GitVersion.Tool

      - name: Generate Version
        id: gitversion
        run: dotnet-gitversion /output json /outputfile gitversion.json

      - name: Read Version
        id: read_version
        run: |
          $version = (ConvertFrom-Json (Get-Content -Raw gitversion.json)).SemVer
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Build project
        run: dotnet build --configuration Release

      - name: Publish project
        run: dotnet publish -c Release -o ./publish

      - name: Create Inno Setup Script
        run: |
          $version = (ConvertFrom-Json (Get-Content -Raw gitversion.json)).SemVer
          echo '[Setup]' > setup.iss
          echo 'AppName=My App' >> setup.iss
          echo "AppVersion=$version" >> setup.iss
          echo 'DefaultDirName={pf}\MyApp' >> setup.iss
          echo 'OutputDir=.' >> setup.iss
          echo 'OutputBaseFilename=setup' >> setup.iss
          echo '[Files]' >> setup.iss
          echo 'Source: "publish\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs' >> setup.iss

      - name: Run Inno Setup Compiler
        run: iscc setup.iss

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.gitversion.outputs.version }}
          release_name: Release ${{ steps.gitversion.outputs.version }}
          body: Automated release of version ${{ steps.gitversion.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Setup
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./setup.exe
          asset_name: setup.exe
          asset_content_type: application/octet-stream
