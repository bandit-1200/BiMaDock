name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # LÃ¤dt die gesamte Historie

    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Install Nerdbank.GitVersioning 
      run: dotnet tool install --global nbgv

    - name: Install dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release

    - name: Publish project
      run: dotnet publish ./BiMaDock.csproj --configuration Release --output ./publish --runtime win-x64

    - name: Update Inno Setup version
      run: pwsh -File update_version.ps1

    - name: Install Windows SDK
      run: choco install windows-sdk-10.1 -y

    - name: Decode certificate
      shell: pwsh
      run: |
        $certContent = @"
        ${{ secrets.CERTIFICATE_FILE }}
        "@
        $certContent | Out-File -FilePath meinzertifikat_base64.txt -Encoding ascii
        certutil -decode meinzertifikat_base64.txt meinzertifikat.pfx

    - name: Verify signtool path
      shell: pwsh
      run: |
        if (Test-Path "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe") {
          Write-Output "signtool.exe found."
        } else {
          Write-Output "signtool.exe not found."
          exit 1
        }

    - name: Sign executable
      if: success()
      run: |
        & "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe" sign /f meinzertifikat.pfx /p ${{ secrets.CERTIFICATE_PASSWORD }} /t http://timestamp.url ./publish/BiMaDockSetup.exe

    - name: Create Windows installer
      run: |
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "./BiMaDock.iss"

    - name: Determine tag
      id: determine_tag
      run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_STATE  # Setze den Tag in GITHUB_STATE

    - name: Create release
      id: create_release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        automatic_release_tag: ${{ steps.determine_tag.outputs.RELEASE_TAG }}
        title: "Release ${{ steps.determine_tag.outputs.RELEASE_TAG }}"
        files: |
          ./publish/BiMaDockSetup.exe

    - name: Save Release URL
      run: echo "RELEASE_URL=https://github.com/${{ github.repository }}/releases/tag/${{ steps.determine_tag.outputs.RELEASE_TAG }}" >> $GITHUB_OUTPUT  # Ausgabe in GITHUB_OUTPUT
